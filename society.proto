syntax = "proto3";

option go_package = "./society-proto";

service SocietyService {
  // Создание сообщества
  rpc CreateSociety (SetSocietyIn) returns (SetSocietyOut);
  // Настройка сообщества
  rpc UpdateSociety (UpdateSocietyIn) returns (EmptySociety);
  // Информация по сообществу
  rpc GetSocietyInfo (GetSocietyInfoIn) returns (GetSocietyInfoOut);
  // Удаление сообщества
  rpc RemoveSociety (RemoveSocietyIn) returns (EmptySociety);
  // Подписка на сообщество
  rpc SubscribeToSociety (SubscribeToSocietyIn) returns (EmptySociety);
  // Отписка от сообщества
  rpc UnSubscribeToSociety (UnSubscribeToSocietyIn) returns (EmptySociety);
  // Список сообществ для поиска по названию сообщества
  rpc GetSocietyWithOffset (GetSocietyWithOffsetIn) returns (GetSocietyWithOffsetOut);
  // Список сообществ юзера
  rpc GetSocietyForUserWithOffset (GetSocietyForUserWithOffsetIn) returns (GetSocietyForUserWithOffsetOut);
}

message SetSocietyIn {
  // Название сообщества
  string name = 1;
  // Формат сообщества
  int64 formatID = 2;
  // Правила сообщений в сообществе
  int64 postPermissionID = 3;
  // Настройка поиска сообщества
  bool isSearch = 4;
}

message SetSocietyOut {
  // UUID созданного сообщества
  string societyUUID = 1;
}

message UpdateSocietyIn {
  // UUID сообщества
  string societyUUID = 1;
  // Название сообщества
  string name = 2;
  // Описание сообщества
  string description = 3;
  // Аватар сообщества
  string photoURL = 4;
  // Формат сообщества
  int64 formatID = 5;
  // Правила сообщений в сообществе
  int64 postPermission = 6;
  // Настройка поиска сообщества
  bool isSearch = 7;
  // Список тегов сообщества
  repeated TagsID tagsID = 8;
}

message EmptySociety {

}
message TagsID {
  // ID тега
  int64 tagID = 1;
}

message GetSocietyInfoIn {
  // UUID сообщества
  string societyUUID = 1;
}

message GetSocietyInfoOut {
  // Название сообщества
  string name = 1;
  // Описание сообщества
  string description = 2;
  // Владелец сообщества
  string ownerUUID = 3;
  //может редактировать сообщество
  bool canEditSociety = 4;
  // Формат сообщества
  int64 formatID = 5;
  // Правила сообщений в сообществе
  int64 postPermission = 6;
  // Настройка поиска сообщества
  bool isSearch = 7;
  // Количество подписчиков сообщества
  int64 countSubscribe = 8;
  // Теги сообщества
  repeated TagsID tagsID = 9;

}

message RemoveSocietyIn {
  // UUID сообщества
  string societyUUID = 1;
}

message SubscribeToSocietyIn {
  // UUID сообщества
  string societyUUID = 1;
}

message UnSubscribeToSocietyIn {
  // UUID сообщества
  string societyUUID = 1;
}

message GetSocietyWithOffsetIn {
  // Лимит возвращаемых записей
  int64 limit = 1;
  //С какой записи начинаем
  int64 offset = 2;
  // Название сообщества по которому происходит поиск, если пусто то все сообщества
  string name = 3;
}

message GetSocietyWithOffsetOut {
  // Список сообществ
  repeated Society societies = 1;
  // Количество найденых записей
  int64 total = 2;
}

message Society {
  // UUID сообщества
  string societyUUID = 1;
  // Название сообщества
  string name = 2;
  // Аватар сообщества
  string photoURL = 3;
  // Состоит пользователь в сообществе: true - cocтоит, false - не состоит
  bool isMember = 4;
  // Приватное сообщество: true - да, false - нет
  bool isPrivate = 5;
}

message GetSocietyForUserWithOffsetIn {
  // Лимит возвращаемых записей
  int64 limit = 1;
  //С какой записи начинаем
  int64 offset = 2;
  // UUID пользователя
  string userUUID = 3;
}

message GetSocietyForUserWithOffsetOut {
  // Список сообществ
  repeated Society societies = 1;
  // Количество найденых записей
  int64 total = 2;
}
